{"ast":null,"code":"\"use strict\";\n\nvar e = require(\"crypto\"),\n    t = function () {\n  function t(r) {\n    var i = this;\n    this.deriveKey = function (r, i) {\n      var n = Object.assign({}, t.defaultDeriveKeyOpts, i),\n          s = n.salt,\n          o = n.iterations,\n          a = n.digest;\n      return e.pbkdf2Sync(r, s, o, 32, a);\n    }, this.encryptString = function (t, r) {\n      var n = i.deriveKey(r, i._deriveKeyOptions),\n          s = e.randomBytes(16),\n          o = e.createCipheriv(\"aes-256-gcm\", n, s),\n          a = o.update(t.toString(), \"utf8\", \"base64\");\n      a += o.final(\"base64\");\n      var f = Buffer.from(a).toString(\"hex\");\n      return s.toString(\"hex\") + \":\" + f;\n    }, this.decryptString = function (t, r) {\n      var n = i.deriveKey(r, i._deriveKeyOptions),\n          s = t.toString().split(\":\");\n      if (2 !== s.length) throw new Error(\"Incorrect format for encrypted string: \" + t);\n      var o = s[0],\n          a = s[1],\n          f = Buffer.from(o, \"hex\"),\n          u = Buffer.from(a, \"hex\").toString();\n      return e.createDecipheriv(\"aes-256-gcm\", n, f).update(u, \"base64\").toString();\n    }, r && (this._deriveKeyOptions = r);\n  }\n\n  return t.defaultDeriveKeyOpts = {\n    salt: \"s41t\",\n    iterations: 1,\n    digest: \"sha512\"\n  }, t;\n}();\n\nmodule.exports = t;","map":null,"metadata":{},"sourceType":"script"}