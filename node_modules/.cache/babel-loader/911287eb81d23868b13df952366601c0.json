{"ast":null,"code":"import { __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { encode } from '../../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\nvar webGLVarMap = new Map();\n\nfunction variableListFor(ctx, ctor) {\n  var contextMap = webGLVarMap.get(ctx);\n\n  if (!contextMap) {\n    contextMap = new Map();\n    webGLVarMap.set(ctx, contextMap);\n  }\n\n  if (!contextMap.has(ctor)) {\n    contextMap.set(ctor, []);\n  }\n\n  return contextMap.get(ctor);\n}\n\nvar saveWebGLVar = function saveWebGLVar(value, win, ctx) {\n  if (!value || !(isInstanceOfWebGLObject(value, win) || typeof value === 'object')) return;\n  var name = value.constructor.name;\n  var list = variableListFor(ctx, name);\n  var index = list.indexOf(value);\n\n  if (index === -1) {\n    index = list.length;\n    list.push(value);\n  }\n\n  return index;\n};\n\nfunction serializeArg(value, win, ctx) {\n  if (value instanceof Array) {\n    return value.map(function (arg) {\n      return serializeArg(arg, win, ctx);\n    });\n  } else if (value === null) {\n    return value;\n  } else if (value instanceof Float32Array || value instanceof Float64Array || value instanceof Int32Array || value instanceof Uint32Array || value instanceof Uint8Array || value instanceof Uint16Array || value instanceof Int16Array || value instanceof Int8Array || value instanceof Uint8ClampedArray) {\n    var name_1 = value.constructor.name;\n    return {\n      rr_type: name_1,\n      args: [Object.values(value)]\n    };\n  } else if (value instanceof ArrayBuffer) {\n    var name_2 = value.constructor.name;\n    var base64 = encode(value);\n    return {\n      rr_type: name_2,\n      base64: base64\n    };\n  } else if (value instanceof DataView) {\n    var name_3 = value.constructor.name;\n    return {\n      rr_type: name_3,\n      args: [serializeArg(value.buffer, win, ctx), value.byteOffset, value.byteLength]\n    };\n  } else if (value instanceof HTMLImageElement) {\n    var name_4 = value.constructor.name;\n    var src = value.src;\n    return {\n      rr_type: name_4,\n      src: src\n    };\n  } else if (value instanceof ImageData) {\n    var name_5 = value.constructor.name;\n    return {\n      rr_type: name_5,\n      args: [serializeArg(value.data, win, ctx), value.width, value.height]\n    };\n  } else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n    var name_6 = value.constructor.name;\n    var index = saveWebGLVar(value, win, ctx);\n    return {\n      rr_type: name_6,\n      index: index\n    };\n  }\n\n  return value;\n}\n\nvar serializeArgs = function serializeArgs(args, win, ctx) {\n  return __spreadArray([], __read(args), false).map(function (arg) {\n    return serializeArg(arg, win, ctx);\n  });\n};\n\nvar isInstanceOfWebGLObject = function isInstanceOfWebGLObject(value, win) {\n  var webGLConstructorNames = ['WebGLActiveInfo', 'WebGLBuffer', 'WebGLFramebuffer', 'WebGLProgram', 'WebGLRenderbuffer', 'WebGLShader', 'WebGLShaderPrecisionFormat', 'WebGLTexture', 'WebGLUniformLocation', 'WebGLVertexArrayObject', 'WebGLVertexArrayObjectOES'];\n  var supportedWebGLConstructorNames = webGLConstructorNames.filter(function (name) {\n    return typeof win[name] === 'function';\n  });\n  return Boolean(supportedWebGLConstructorNames.find(function (name) {\n    return value instanceof win[name];\n  }));\n};\n\nexport { isInstanceOfWebGLObject, saveWebGLVar, serializeArg, serializeArgs, variableListFor };","map":null,"metadata":{},"sourceType":"module"}