{"ast":null,"code":"import _classCallCheck from \"/Users/sampath/Documents/code/me/habitrise/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sampath/Documents/code/me/habitrise/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/sampath/Documents/code/me/habitrise/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/sampath/Documents/code/me/habitrise/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sampath/Documents/code/me/habitrise/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/sampath/Documents/code/me/habitrise/src/components/core/timer/index.jsx\";\nimport React from \"react\";\n\nvar Timer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer(props) {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _super.call(this);\n    _this.state = {\n      time: {},\n      seconds: props.seconds,\n      timeElapsed: 0,\n      startTime: new Date()\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n      this.startTimer();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(oldProps, newProps) {\n      var endTime = new Date();\n      var timeDiff = endTime - this.state.startTime; //in ms\n\n      timeDiff /= 1000;\n      var seconds = Math.round(timeDiff);\n\n      if (seconds < 10) {\n        this.setState({\n          seconds: oldProps.seconds\n        });\n        this.startTimer();\n      }\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      // Remove one second, set state so a re-render happens.\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      }); // Check if we're at zero.\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        id: \"timeRem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, \"00: \", this.state.time.m, \": \", this.state.time.s, \"s\");\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\nexport { Timer as default };","map":{"version":3,"names":["React","Timer","props","state","time","seconds","timeElapsed","startTime","Date","timer","startTimer","bind","countDown","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","timeLeftVar","secondsToTime","setState","oldProps","newProps","endTime","timeDiff","round","setInterval","clearInterval","m","s","Component"],"sources":["/Users/sampath/Documents/code/me/habitrise/src/components/core/timer/index.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default class Timer extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { time: {}, seconds: props.seconds, timeElapsed: 0, startTime: new Date()  };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs){\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      \"h\": hours,\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n    this.startTimer();\r\n  }\r\n\r\n  componentWillReceiveProps(oldProps, newProps) {\r\n    var endTime = new Date();\r\n    var timeDiff = endTime - this.state.startTime; //in ms\r\n    timeDiff /= 1000;\r\n    var seconds = Math.round(timeDiff);\r\n    if (seconds < 10) {\r\n      this.setState({seconds: oldProps.seconds});\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <span id=\"timeRem\">\r\n        00: {this.state.time.m}: {this.state.time.s}s\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,K;;;;;EACnB,eAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB;IACA,MAAKC,KAAL,GAAa;MAAEC,IAAI,EAAE,EAAR;MAAYC,OAAO,EAAEH,KAAK,CAACG,OAA3B;MAAoCC,WAAW,EAAE,CAAjD;MAAoDC,SAAS,EAAE,IAAIC,IAAJ;IAA/D,CAAb;IACA,MAAKC,KAAL,GAAa,CAAb;IACA,MAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;IACA,MAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;IALiB;EAMlB;;;;WAED,uBAAcE,IAAd,EAAmB;MACjB,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,IAAI,KAAK,EAAT,CAAf,CAAZ;MAEA,IAAII,mBAAmB,GAAGJ,IAAI,IAAI,KAAK,EAAT,CAA9B;MACA,IAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAd;MAEA,IAAIE,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD;MACA,IAAIZ,OAAO,GAAGU,IAAI,CAACK,IAAL,CAAUD,mBAAV,CAAd;MAEA,IAAIE,GAAG,GAAG;QACR,KAAKP,KADG;QAER,KAAKI,OAFG;QAGR,KAAKb;MAHG,CAAV;MAKA,OAAOgB,GAAP;IACD;;;WAED,6BAAoB;MAClB,IAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmB,KAAKpB,KAAL,CAAWE,OAA9B,CAAlB;MACA,KAAKmB,QAAL,CAAc;QAAEpB,IAAI,EAAEkB;MAAR,CAAd;MACA,KAAKZ,UAAL;IACD;;;WAED,mCAA0Be,QAA1B,EAAoCC,QAApC,EAA8C;MAC5C,IAAIC,OAAO,GAAG,IAAInB,IAAJ,EAAd;MACA,IAAIoB,QAAQ,GAAGD,OAAO,GAAG,KAAKxB,KAAL,CAAWI,SAApC,CAF4C,CAEG;;MAC/CqB,QAAQ,IAAI,IAAZ;MACA,IAAIvB,OAAO,GAAGU,IAAI,CAACc,KAAL,CAAWD,QAAX,CAAd;;MACA,IAAIvB,OAAO,GAAG,EAAd,EAAkB;QAChB,KAAKmB,QAAL,CAAc;UAACnB,OAAO,EAAEoB,QAAQ,CAACpB;QAAnB,CAAd;QACA,KAAKK,UAAL;MACD;IACF;;;WAED,sBAAa;MACX,IAAI,KAAKD,KAAL,IAAc,CAAd,IAAmB,KAAKN,KAAL,CAAWE,OAAX,GAAqB,CAA5C,EAA+C;QAC7C,KAAKI,KAAL,GAAaqB,WAAW,CAAC,KAAKlB,SAAN,EAAiB,IAAjB,CAAxB;MACD;IACF;;;WAED,qBAAY;MACV;MACA,IAAIP,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;MACA,KAAKmB,QAAL,CAAc;QACZpB,IAAI,EAAE,KAAKmB,aAAL,CAAmBlB,OAAnB,CADM;QAEZA,OAAO,EAAEA;MAFG,CAAd,EAHU,CAQV;;MACA,IAAIA,OAAO,IAAI,CAAf,EAAkB;QAChB0B,aAAa,CAAC,KAAKtB,KAAN,CAAb;MACD;IACF;;;WAED,kBAAS;MACP,oBACE;QAAM,EAAE,EAAC,SAAT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WACO,KAAKN,KAAL,CAAWC,IAAX,CAAgB4B,CADvB,QAC4B,KAAK7B,KAAL,CAAWC,IAAX,CAAgB6B,CAD5C,MADF;IAKD;;;;EArEgCjC,KAAK,CAACkC,S;;SAApBjC,K"},"metadata":{},"sourceType":"module"}