{"ast":null,"code":"import _classCallCheck from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";var Timer=/*#__PURE__*/function(_React$Component){_inherits(Timer,_React$Component);function Timer(props){var _this;_classCallCheck(this,Timer);_this=_possibleConstructorReturn(this,_getPrototypeOf(Timer).call(this));_this.state={time:{},seconds:props.seconds};_this.timer=0;_this.startTimer=_this.startTimer.bind(_assertThisInitialized(_this));_this.countDown=_this.countDown.bind(_assertThisInitialized(_this));return _this;}_createClass(Timer,[{key:\"secondsToTime\",value:function secondsToTime(secs){var hours=Math.floor(secs/(60*60));var divisor_for_minutes=secs%(60*60);var minutes=Math.floor(divisor_for_minutes/60);var divisor_for_seconds=divisor_for_minutes%60;var seconds=Math.ceil(divisor_for_seconds);var obj={\"h\":hours,\"m\":minutes,\"s\":seconds};return obj;}},{key:\"componentDidMount\",value:function componentDidMount(){var timeLeftVar=this.secondsToTime(this.state.seconds);this.setState({time:timeLeftVar});this.startTimer();}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(oldProps,newProps){this.setState({seconds:oldProps.seconds});this.startTimer();}},{key:\"startTimer\",value:function startTimer(){if(this.timer==0&&this.state.seconds>0){this.timer=setInterval(this.countDown,1000);}}},{key:\"countDown\",value:function countDown(){// Remove one second, set state so a re-render happens.\nvar seconds=this.state.seconds-1;this.setState({time:this.secondsToTime(seconds),seconds:seconds});// Check if we're at zero.\nif(seconds==0){clearInterval(this.timer);}}},{key:\"render\",value:function render(){return React.createElement(\"span\",null,\"00: \",this.state.time.m,\": \",this.state.time.s,\"s\");}}]);return Timer;}(React.Component);export{Timer as default};","map":{"version":3,"sources":["/Users/sampath/Documents/code/me/stint-web/src/components/core/timer/index.jsx"],"names":["React","Timer","props","state","time","seconds","timer","startTimer","bind","countDown","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","timeLeftVar","secondsToTime","setState","oldProps","newProps","setInterval","clearInterval","m","s","Component"],"mappings":"o+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEqBC,CAAAA,K,2EACnB,eAAYC,KAAZ,CAAmB,uCACjB,yEACA,MAAKC,KAAL,CAAa,CAAEC,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAEH,KAAK,CAACG,OAA3B,CAAb,CACA,MAAKC,KAAL,CAAa,CAAb,CACA,MAAKC,UAAL,CAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB,CACA,MAAKC,SAAL,CAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB,CALiB,aAMlB,C,sEAEaE,I,CAAK,CACjB,GAAIC,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,EAAI,GAAK,EAAT,CAAf,CAAZ,CAEA,GAAII,CAAAA,mBAAmB,CAAGJ,IAAI,EAAI,GAAK,EAAT,CAA9B,CACA,GAAIK,CAAAA,OAAO,CAAGH,IAAI,CAACC,KAAL,CAAWC,mBAAmB,CAAG,EAAjC,CAAd,CAEA,GAAIE,CAAAA,mBAAmB,CAAGF,mBAAmB,CAAG,EAAhD,CACA,GAAIT,CAAAA,OAAO,CAAGO,IAAI,CAACK,IAAL,CAAUD,mBAAV,CAAd,CAEA,GAAIE,CAAAA,GAAG,CAAG,CACR,IAAKP,KADG,CAER,IAAKI,OAFG,CAGR,IAAKV,OAHG,CAAV,CAKA,MAAOa,CAAAA,GAAP,CACD,C,6DAEmB,CAClB,GAAIC,CAAAA,WAAW,CAAG,KAAKC,aAAL,CAAmB,KAAKjB,KAAL,CAAWE,OAA9B,CAAlB,CACA,KAAKgB,QAAL,CAAc,CAAEjB,IAAI,CAAEe,WAAR,CAAd,EACA,KAAKZ,UAAL,GACD,C,4EAEyBe,Q,CAAUC,Q,CAAU,CAC5C,KAAKF,QAAL,CAAc,CAAChB,OAAO,CAAEiB,QAAQ,CAACjB,OAAnB,CAAd,EACA,KAAKE,UAAL,GACD,C,+CAEY,CACX,GAAI,KAAKD,KAAL,EAAc,CAAd,EAAmB,KAAKH,KAAL,CAAWE,OAAX,CAAqB,CAA5C,CAA+C,CAC7C,KAAKC,KAAL,CAAakB,WAAW,CAAC,KAAKf,SAAN,CAAiB,IAAjB,CAAxB,CACD,CACF,C,6CAEW,CACV;AACA,GAAIJ,CAAAA,OAAO,CAAG,KAAKF,KAAL,CAAWE,OAAX,CAAqB,CAAnC,CACA,KAAKgB,QAAL,CAAc,CACZjB,IAAI,CAAE,KAAKgB,aAAL,CAAmBf,OAAnB,CADM,CAEZA,OAAO,CAAEA,OAFG,CAAd,EAKA;AACA,GAAIA,OAAO,EAAI,CAAf,CAAkB,CAChBoB,aAAa,CAAC,KAAKnB,KAAN,CAAb,CACD,CACF,C,uCAEQ,CACP,MACE,wCACO,KAAKH,KAAL,CAAWC,IAAX,CAAgBsB,CADvB,MAC4B,KAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,CAD5C,KADF,CAKD,C,mBA/DgC3B,KAAK,CAAC4B,S,SAApB3B,K","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Timer extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { time: {}, seconds: props.seconds  };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs){\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      \"h\": hours,\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n    this.startTimer();\r\n  }\r\n\r\n  componentWillReceiveProps(oldProps, newProps) {\r\n    this.setState({seconds: oldProps.seconds});\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <span>\r\n        00: {this.state.time.m}: {this.state.time.s}s\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}