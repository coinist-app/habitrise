{"ast":null,"code":"var md5 = require('md5-jkmyers');\n\nvar xtend = require('xtend');\n\nvar chars = [];\nvar defaultOpts = {\n  lettersUpper: true,\n  lettersLower: true,\n  numbers: true,\n  special: false,\n  whitespace: true,\n  maxLen: 8\n};\nvar strs = {\n  lettersUpper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  lettersLower: 'abcdefghijklmnopqrstuvwxyz',\n  numbers: '0123456789',\n  special: '`~!@#$%^&*()-_=+|\\\\;:\\'\",.<>[]{}/?',\n  whitespace: ' \\t\\n'\n};\n\nfunction optsToArray(opts) {\n  var result = '';\n  if (opts.lettersUpper) result += strs.lettersUpper;\n  if (opts.lettersLower) result += strs.lettersLower;\n  if (opts.numbers) result += strs.numbers;\n  if (opts.special) result += strs.special;\n  if (opts.whitespace) result += strs.whitespace;\n  return result.split('');\n}\n\nfunction generate(length) {\n  var res = chars[0];\n\n  for (var i = 1; i < length; i++) {\n    res += chars[0];\n  }\n\n  return res;\n}\n\nfunction Rnc(str, charEnd, veryEnd) {\n  return typeof str === 'object' ? {\n    str: typeof str.str !== 'undefined' ? str.str : '',\n    charEnd: typeof str.charEnd !== 'undefined' ? str.charEnd : false,\n    veryEnd: typeof str.veryEnd !== 'undefined' ? str.veryEnd : false\n  } : {\n    str: typeof str !== 'undefined' ? str : '',\n    charEnd: typeof charEnd !== 'undefined' ? charEnd : false,\n    veryEnd: typeof veryEnd !== 'undefined' ? veryEnd : false\n  };\n}\n\nfunction nextChar(str, ind) {\n  var charIndex = chars.indexOf(str.charAt(ind));\n  return {\n    chr: chars[(charIndex + 1) % chars.length],\n    end: charIndex >= chars.length - 1\n  };\n}\n\nfunction replaceChar(str, ind, newChar) {\n  var t1 = str.slice(0, ind);\n  var t2 = str.slice(ind + 1);\n  return t1 + newChar + t2;\n}\n\nfunction replaceNextChar(str, ind) {\n  var nc = nextChar(str, ind);\n  var str = replaceChar(str, ind, nc.chr);\n  if (nc.end) if (ind === 0) str = generate(str.length + 1);else str = replaceNextChar(str, ind - 1, nc.chr).str;\n  return {\n    str: str,\n    charEnd: nc.end,\n    veryEnd: nc.end && ind === 0\n  };\n}\n\nfunction iterate(hash, maxLen) {\n  var start = new Date().getTime();\n  var rnc = new Rnc(chars[0]);\n  var status = {\n    running: true,\n    foundHash: false\n  };\n  var ind = 0;\n\n  for (var x = 0; status.running; x++) {\n    rnc = replaceNextChar(rnc.str, ind);\n    ind = rnc.str.length - 1;\n\n    if (md5(rnc.str) === hash) {\n      status.running = false;\n      status.foundHash = true;\n    } else if (rnc.veryEnd) {\n      if (rnc.str.length >= maxLen) status.running = false;\n    }\n  }\n\n  if (status.foundHash) {\n    var end = new Date().getTime();\n    return {\n      str: rnc.str,\n      elapsed: (end - start) / 1000\n    };\n  } else {\n    return new Error(\"No string found for hash %s\", hash);\n  }\n}\n\nmodule.exports = function Brute(constructorOpts) {\n  return function brute(hash, opts) {\n    opts = xtend(defaultOpts, constructorOpts, opts);\n    chars = optsToArray(opts);\n    return iterate(hash, opts.maxLen);\n  };\n};","map":null,"metadata":{},"sourceType":"script"}