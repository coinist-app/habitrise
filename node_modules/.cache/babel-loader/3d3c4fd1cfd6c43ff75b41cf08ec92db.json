{"ast":null,"code":"import _classCallCheck from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/sampath/Documents/code/me/stint-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import classnames from\"classnames\";import GridComponent from\"./GridComponent\";import WarningMessage from\"../WarningMessage\";import GreyBox from\"../../images/GreyBox.svg\";import styles from\"./grid.module.css\";import CONSTANTS from\"../../constants\";var portfolio=/*#__PURE__*/function(_Component){_inherits(portfolio,_Component);function portfolio(props){var _this;_classCallCheck(this,portfolio);_this=_possibleConstructorReturn(this,_getPrototypeOf(portfolio).call(this,props));_this.state={gridTextAssets:[{description:\"\",header:\"\",id:0}],WarningMessageOpen:false,WarningMessageText:\"\"};_this.handleWarningClose=_this.handleWarningClose.bind(_assertThisInitialized(_this));return _this;}// Get the text sample data from the back end\n_createClass(portfolio,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(CONSTANTS.ENDPOINT.GRID).then(function(response){if(!response.ok){throw Error(response.statusText);}return response.json();}).then(function(result){return _this2.setState({gridTextAssets:result});}).catch(function(error){return _this2.setState({WarningMessageOpen:true,WarningMessageText:\"Request to get grid text failed: \".concat(error)});});}},{key:\"handleWarningClose\",value:function handleWarningClose(){this.setState({WarningMessageOpen:false,WarningMessageText:\"\"});}},{key:\"render\",value:function render(){var _this$state=this.state,gridTextAssets=_this$state.gridTextAssets,WarningMessageOpen=_this$state.WarningMessageOpen,WarningMessageText=_this$state.WarningMessageText;return React.createElement(\"main\",{id:\"mainContent\"},React.createElement(\"div\",{className:classnames(\"text-center\",styles.header)},React.createElement(\"h1\",null,\"myApp\"),React.createElement(\"p\",null,\"This is placeholder text. Your web app description goes here.\"),React.createElement(\"a\",{href:\"https://github.com/Microsoft/WebTemplateStudio\",className:\"btn btn-primary my-2\"},\"Link to our Github\")),React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row justify-content-center py-5\"},React.createElement(\"h1\",null,\"Bootstrap portfolio Template\")),React.createElement(\"div\",{className:\"row justify-content-around text-center pb-5\"},gridTextAssets.map(function(textAssets){return React.createElement(GridComponent,{key:textAssets.id,header:textAssets.title,description:textAssets.shortDescription,image:GreyBox});}))),React.createElement(WarningMessage,{open:WarningMessageOpen,text:WarningMessageText,onWarningClose:this.handleWarningClose}));}}]);return portfolio;}(Component);export{portfolio as default};","map":{"version":3,"sources":["/Users/sampath/Documents/code/me/stint-web/src/components/portfolio/index.jsx"],"names":["React","Component","classnames","GridComponent","WarningMessage","styles","CONSTANTS","portfolio","props","state","gridTextAssets","description","header","id","WarningMessageOpen","WarningMessageText","handleWarningClose","bind","fetch","ENDPOINT","GRID","then","response","ok","Error","statusText","json","result","setState","catch","error","map","textAssets","title","shortDescription","GreyBox"],"mappings":"o+BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,C,8CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,C,GAEqBC,CAAAA,S,mEACnB,mBAAYC,KAAZ,CAAmB,2CACjB,2EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,cAAc,CAAE,CAAC,CAAEC,WAAW,CAAE,EAAf,CAAmBC,MAAM,CAAE,EAA3B,CAA+BC,EAAE,CAAE,CAAnC,CAAD,CADL,CAEXC,kBAAkB,CAAE,KAFT,CAGXC,kBAAkB,CAAE,EAHT,CAAb,CAMA,MAAKC,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,+BAA1B,CARiB,aASlB,CAED;mFACoB,iBAClBC,KAAK,CAACZ,SAAS,CAACa,QAAV,CAAmBC,IAApB,CAAL,CACGC,IADH,CACQ,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CAChB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACD,CACD,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACD,CANH,EAOGL,IAPH,CAOQ,SAAAM,MAAM,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAAElB,cAAc,CAAEiB,MAAlB,CAAd,CAAJ,EAPd,EAQGE,KARH,CAQS,SAAAC,KAAK,QACV,CAAA,MAAI,CAACF,QAAL,CAAc,CACZd,kBAAkB,CAAE,IADR,CAEZC,kBAAkB,4CAAsCe,KAAtC,CAFN,CAAd,CADU,EARd,EAcD,C,+DAEoB,CACnB,KAAKF,QAAL,CAAc,CACZd,kBAAkB,CAAE,KADR,CAEZC,kBAAkB,CAAE,EAFR,CAAd,EAID,C,uCAEQ,iBAKH,KAAKN,KALF,CAELC,cAFK,aAELA,cAFK,CAGLI,kBAHK,aAGLA,kBAHK,CAILC,kBAJK,aAILA,kBAJK,CAMP,MACE,6BAAM,EAAE,CAAC,aAAT,EACE,2BAAK,SAAS,CAAEb,UAAU,CAAC,aAAD,CAAgBG,MAAM,CAACO,MAAvB,CAA1B,EACE,sCADF,CAEE,6FAFF,CAGE,yBACE,IAAI,CAAC,gDADP,CAEE,SAAS,CAAC,sBAFZ,uBAHF,CADF,CAYE,2BAAK,SAAS,CAAC,WAAf,EACE,2BAAK,SAAS,CAAC,iCAAf,EACE,6DADF,CADF,CAKE,2BAAK,SAAS,CAAC,6CAAf,EACGF,cAAc,CAACqB,GAAf,CAAmB,SAAAC,UAAU,QAC5B,qBAAC,aAAD,EACE,GAAG,CAAEA,UAAU,CAACnB,EADlB,CAEE,MAAM,CAAEmB,UAAU,CAACC,KAFrB,CAGE,WAAW,CAAED,UAAU,CAACE,gBAH1B,CAIE,KAAK,CAAEC,OAJT,EAD4B,EAA7B,CADH,CALF,CAZF,CA4BE,oBAAC,cAAD,EACE,IAAI,CAAErB,kBADR,CAEE,IAAI,CAAEC,kBAFR,CAGE,cAAc,CAAE,KAAKC,kBAHvB,EA5BF,CADF,CAoCD,C,uBA/EoCf,S,SAAlBM,S","sourcesContent":["import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport GridComponent from \"./GridComponent\";\nimport WarningMessage from \"../WarningMessage\";\nimport GreyBox from \"../../images/GreyBox.svg\";\nimport styles from \"./grid.module.css\";\nimport CONSTANTS from \"../../constants\";\n\nexport default class portfolio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridTextAssets: [{ description: \"\", header: \"\", id: 0 }],\n      WarningMessageOpen: false,\n      WarningMessageText: \"\"\n    };\n\n    this.handleWarningClose = this.handleWarningClose.bind(this);\n  }\n\n  // Get the text sample data from the back end\n  componentDidMount() {\n    fetch(CONSTANTS.ENDPOINT.GRID)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(result => this.setState({ gridTextAssets: result }))\n      .catch(error =>\n        this.setState({\n          WarningMessageOpen: true,\n          WarningMessageText: `Request to get grid text failed: ${error}`\n        })\n      );\n  }\n\n  handleWarningClose() {\n    this.setState({\n      WarningMessageOpen: false,\n      WarningMessageText: \"\"\n    });\n  }\n\n  render() {\n    const {\n      gridTextAssets,\n      WarningMessageOpen,\n      WarningMessageText\n    } = this.state;\n    return (\n      <main id=\"mainContent\">\n        <div className={classnames(\"text-center\", styles.header)}>\n          <h1>myApp</h1>\n          <p>This is placeholder text. Your web app description goes here.</p>\n          <a\n            href=\"https://github.com/Microsoft/WebTemplateStudio\"\n            className=\"btn btn-primary my-2\"\n          >\n            Link to our Github\n          </a>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row justify-content-center py-5\">\n            <h1>Bootstrap portfolio Template</h1>\n          </div>\n\n          <div className=\"row justify-content-around text-center pb-5\">\n            {gridTextAssets.map(textAssets => (\n              <GridComponent\n                key={textAssets.id}\n                header={textAssets.title}\n                description={textAssets.shortDescription}\n                image={GreyBox}\n              />\n            ))}\n          </div>\n        </div>\n        <WarningMessage\n          open={WarningMessageOpen}\n          text={WarningMessageText}\n          onWarningClose={this.handleWarningClose}\n        />\n      </main>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}